{"version":3,"file":"main.js","mappings":"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","sources":["webpack://todo/./src/task.js","webpack://todo/./src/storage.js","webpack://todo/./src/index.js"],"sourcesContent":["class TaskList {\r\n    constructor() {\r\n        this.categories = [];\r\n    }\r\n\r\n    addCategory(category) {\r\n        this.categories.push(category);\r\n    }\r\n\r\n    deleteCategory(name) {\r\n        this.categories = this.categories.filter((category) => category.name !== name);        \r\n    }\r\n\r\n}\r\n\r\nclass Category {\r\n    constructor(name){\r\n        this.name = name;\r\n        this.tasks = [];\r\n    }\r\n\r\n    addTask(task) {\r\n        const taskExist = this.tasks.some((t) => t.title === task.title);\r\n        if (!taskExist) {\r\n            this.tasks.push(task);  \r\n        }\r\n\r\n    }\r\n\r\n    deleteTask(title) {\r\n        this.tasks = this.tasks.filter((task) => task.title !== title);\r\n    }\r\n}\r\n\r\nclass Task {\r\n    constructor(title,description,dueDate,priority) {\r\n        this.title = title;\r\n        this.description = description;\r\n        this.dueDate = dueDate;\r\n        this.completed = false;\r\n        this.priority = priority;\r\n    }\r\n    \r\n    toggleTaskStatus() {\r\n        this.completed = !this.completed;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {TaskList,Category,Task}","import {TaskList,Category,Task} from \"./task.js\";\r\n\r\n\r\nlet taskList;\r\nfunction initializeApp() {\r\n    const taskListString = localStorage.getItem(\"taskList\");\r\n    console.log(taskListString);\r\n    if (taskListString) {\r\n        taskList = JSON.parse(taskListString);\r\n        // Convert the parsed object back to an instance of TaskList\r\n        taskList = Object.assign(new TaskList(), taskList);\r\n        // Convert the categories and tasks into instances of Category and Task classes\r\n        taskList.categories = taskList.categories.map(category => {\r\n          const cat = Object.assign(new Category(category.name), category);\r\n          cat.tasks = cat.tasks.map(task => Object.assign(new Task(), task));\r\n          return cat;\r\n        });\r\n    } else {\r\n        // creating a tasklist and some tasks\r\n        taskList = new TaskList();\r\n        const workCategory = new Category(\"work\");\r\n        const studyCategory = new Category(\"study\");\r\n        const personalCategory = new Category(\"personal\");\r\n        taskList.addCategory(workCategory);\r\n        taskList.addCategory(studyCategory);\r\n        taskList.addCategory(personalCategory);\r\n        \r\n        \r\n        // creating some task instances\r\n        const task1 = new Task(\"Task 1\", \"Description of Task 1\", \"2023-01-01\");\r\n        const task2 = new Task(\"Task 2\", \"Description of Task 2\", \"2023-02-01\");\r\n        const task3 = new Task(\"Task 3\", \"Description of Task 3\", \"2023-03-01\");\r\n        workCategory.addTask(task1);\r\n        workCategory.addTask(task2);\r\n        studyCategory.addTask(task3);\r\n    }\r\n    console.log(taskList);\r\n    return taskList;\r\n}\r\n\r\nfunction saveTaskListToLocalStorage() {\r\n    const taskListString = JSON.stringify(taskList);\r\n    localStorage.setItem(\"taskList\",taskListString);\r\n\r\n}\r\n\r\n\r\nexport {initializeApp,saveTaskListToLocalStorage}","import {TaskList,Category,Task} from \"./task.js\";\r\nimport {initializeApp,saveTaskListToLocalStorage} from \"./storage.js\";\r\n\r\nconst taskList = initializeApp();\r\n\r\n\r\n//retrieve the content element\r\nconst contentElement = document.querySelector(\".content\");\r\n\r\n\r\n//// categories UI\r\nfunction createHeader() {\r\nconst headerElement = document.createElement(\"header\");\r\nconst headerTitle = document.createElement(\"h1\");\r\nheaderTitle.textContent = \"TO DO APP\";\r\nheaderElement.appendChild(headerTitle);\r\ncontentElement.appendChild(headerElement);\r\n}\r\n\r\nfunction createFooter() {\r\n    const footerElement = document.createElement(\"footer\");\r\n    const footerPara = document.createElement(\"p\");\r\n    const currentYear = new Date().getFullYear();\r\n    footerPara.innerHTML = `&copy; ${currentYear} Woo-Cell`;\r\n    footerElement.appendChild(footerPara);\r\n    contentElement.appendChild(footerElement);\r\n}\r\n\r\nfunction createMain() {\r\n    const mainElement = document.createElement(\"main\");\r\n    mainElement.appendChild(createCategoryContainer());\r\n    mainElement.appendChild(createTaskContainer());\r\n    contentElement.appendChild(mainElement);\r\n}\r\n\r\nfunction createCategoryContainer() {\r\n    const categoryContainer = document.createElement(\"div\");\r\n    categoryContainer.classList.add(\"category-container\");\r\n    const categoryPara = document.createElement(\"p\");\r\n    categoryPara.textContent = \"Your categories\";\r\n    const categoryList = document.createElement(\"ul\");\r\n    categoryContainer.appendChild(categoryPara);\r\n    categoryContainer.appendChild(categoryList);\r\n    return categoryContainer;\r\n}\r\n\r\nfunction createTaskContainer() {\r\n    const taskContainer = document.createElement(\"div\");\r\n    taskContainer.classList.add(\"task-container\");\r\n    return taskContainer;\r\n}\r\n\r\nfunction addCategoryButton() {\r\n    const list = document.querySelector(\".category-container > ul\");\r\n    const addCatBtn = document.createElement(\"button\");\r\n    addCatBtn.classList.add(\"add-category\");\r\n    addCatBtn.textContent = \"ADD\";\r\n    list.appendChild(addCatBtn);\r\n}\r\n\r\nfunction addCategoryToCategoryList(category) {\r\n    const list = document.querySelector(\".category-container > ul\");\r\n    const listItem = document.createElement(\"li\");\r\n    // listItem.innerHTML = `<a href=\"#\" class=\"link\">${category.name}</a><button class=\"delete-cat-btn\">delete</button>`;\r\n    // create cat link\r\n    const catLink = document.createElement(\"a\");\r\n    catLink.setAttribute(\"href\", \"#\");\r\n    catLink.classList.add(\"link\");\r\n    catLink.textContent = `${category.name}`;\r\n    // Add event listener to the new category link\r\n    catLink.addEventListener(\"click\", (e) => {\r\n        e.stopPropagation();\r\n        const index = taskList.categories.findIndex((category) => category.name === e.target.textContent);\r\n        showCorrespondingTasks(taskList.categories[index]);\r\n        const el = e.target;\r\n        activateClass(el);\r\n    });\r\n\r\n    // create edit cat btn\r\n    const catEditBtn = document.createElement(\"button\");\r\n    catEditBtn.classList.add(\"edit-cat-btn\");\r\n    catEditBtn.textContent = \"edit\";\r\n    // add event listener to new edit cat btn\r\n    catEditBtn.addEventListener(\"click\", editCategoryEventHandler);\r\n\r\n\r\n    // create delete cat btn\r\n    const catDeletebtn = document.createElement(\"button\");\r\n    catDeletebtn.classList.add(\"delete-cat-btn\");\r\n    catDeletebtn.textContent = \"delete\";\r\n    // add delete btn listener\r\n    catDeletebtn.addEventListener(\"click\", (e) => {\r\n        e.stopPropagation();\r\n        const deleteCatBtn = document.querySelectorAll(\".delete-cat-btn\");\r\n        const btnArr = Array.from(deleteCatBtn);\r\n        const index = btnArr.indexOf(e.target);\r\n\r\n        // retrieve all links\r\n        const associatedLink = e.target.parentElement.firstChild;\r\n        // refresh task-container only if the deleted link is active\r\n        if (associatedLink.classList.contains(\"active-link\")) {\r\n            deleteCatElement(e)\r\n            taskContainer.innerHTML = \"\";\r\n            initializeTaskContainer();\r\n        } else {\r\n            deleteCatElement(e)\r\n        }\r\n        console.log(taskList);\r\n    });\r\n\r\n\r\n    listItem.appendChild(catLink);\r\n    listItem.appendChild(catEditBtn);\r\n    listItem.appendChild(catDeletebtn);\r\n    list.appendChild(listItem);\r\n\r\n\r\n\r\n    // deleteBtnEventListener();\r\n}\r\n\r\nfunction editCategoryEventHandler(e) {\r\n    e.stopPropagation();\r\n    console.log(\"you clicked on edit\");\r\n    // retrieve all the inputs and buttons from modal\r\n    const editModal = document.querySelector(\".e-cat-dialog\");\r\n    const editCatTitle = document.getElementById(\"e-cat-title\");\r\n    const closeEditCatBtn = document.getElementById(\"close-e-cat-dialog\");\r\n    const saveChangesBtn = document.getElementById(\"e-cat-btn-dialog\");\r\n    \r\n    // retrieve the link element\r\n    const linkElement = e.target.parentElement.firstChild;\r\n\r\n    // show the modal with current value as value\r\n    const currentTitleValue = e.target.parentElement.firstChild.textContent.trim();\r\n    editCatTitle.value = currentTitleValue;\r\n    editModal.showModal();\r\n\r\n    closeEditCatBtn.addEventListener(\"click\", () => {\r\n        editModal.close();\r\n    });\r\n\r\n    saveChangesBtn.addEventListener(\"click\", saveChangesHandler);\r\n\r\n    function saveChangesHandler(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const newTitle = document.getElementById(\"e-cat-title\");\r\n        // add input value to tasklist\r\n        const links = document.querySelectorAll(\".link\");\r\n        const linkArr = Array.from(links);\r\n        const index = linkArr.findIndex((link) => link.textContent.trim() === currentTitleValue);\r\n        let ctgrName = taskList.categories[index].name;\r\n        taskList.categories[index].name = newTitle.value;\r\n        ctgrName = newTitle.value;\r\n        console.log(ctgrName);\r\n        console.log(taskList);\r\n        // update the link accordingly\r\n        linkElement.textContent = `${ctgrName}`;\r\n        editModal.close();\r\n        // refresh task container\r\n        showCorrespondingTasks(taskList.categories[index]);\r\n\r\n\r\n        // Remove the event listener after it's been executed\r\n        saveChangesBtn.removeEventListener(\"click\", saveChangesHandler);\r\n\r\n        // save it to locale storage\r\n        saveTaskListToLocalStorage()\r\n    }\r\n}\r\n\r\nfunction activateClass(el) {\r\n    const siblings = document.querySelectorAll(\".link\");\r\n    siblings.forEach(sibling => sibling.classList.remove(\"active-link\"));\r\n    el.classList.add(\"active-link\");\r\n}\r\n\r\nfunction initializeCategories() {\r\n    addCategoryButton();\r\n    taskList.categories.forEach((category, index) => {\r\n        addCategoryToCategoryList(taskList.categories[index]);\r\n    });\r\n\r\n    // addCategoryToCategoryList(taskList.categories[1]);\r\n    // addCategoryToCategoryList(taskList.categories[2]);\r\n\r\n}\r\n\r\nfunction initializeTaskContainer() {\r\n    const taskContainerElement = document.querySelector(\".task-container\");\r\n    const text = document.createElement(\"p\");\r\n    text.textContent = \"Click on a category to show the associated tasks\";\r\n    text.classList.add(\"text\");\r\n    taskContainerElement.appendChild(text);\r\n}\r\n\r\nfunction initializeScreen() {\r\n    createHeader();\r\n    createMain();\r\n    initializeCategories();\r\n    createFooter();\r\n    initializeTaskContainer();\r\n\r\n}\r\n\r\ninitializeScreen();\r\n\r\n// categories event listener\r\nconst addCatBtn = document.querySelector(\".add-category\");\r\nconst addCatDialog = document.querySelector(\".add-cat-dialog\");\r\nconst catTitle = document.getElementById(\"cat-title\");\r\nconst closeCatBtn = document.getElementById(\"close-add-cat-dialog\");\r\nconst addCatToListBtn = document.getElementById(\"add-cat-btn-dialog\");\r\n\r\n\r\naddCatBtn.addEventListener(\"click\", () => {\r\n    addCatDialog.showModal();\r\n});\r\n\r\ncloseCatBtn.addEventListener(\"click\", () => {\r\n    addCatDialog.close();\r\n    catTitle.value = \"\";\r\n});\r\n\r\naddCatToListBtn.addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    const cat = new Category(`${catTitle.value}`);\r\n    if (catTitle.value) {\r\n        addCategoryToCategoryList(cat);\r\n        taskList.addCategory(cat);\r\n        console.log(taskList);\r\n        addCatDialog.close();\r\n        catTitle.value = \"\";\r\n\r\n        saveTaskListToLocalStorage();\r\n    }\r\n\r\n});\r\n\r\n\r\nfunction deleteBtnEventListener() {\r\n    const deleteCatBtn = document.querySelectorAll(\".delete-cat-btn\");\r\n    deleteCatBtn.forEach((button) => {\r\n        button.addEventListener(\"click\", (e) => {\r\n            const btnArr = Array.from(deleteCatBtn);\r\n            const index = btnArr.indexOf(e.target);\r\n\r\n            // retrieve all links\r\n            const associatedLink = e.target.parentElement.firstChild;\r\n            // refresh task-container only if the deleted link is active\r\n            if (associatedLink.classList.contains(\"active-link\")) {\r\n                deleteCatElement(e)\r\n                taskContainer.innerHTML = \"\";\r\n                initializeTaskContainer();\r\n            } else {\r\n                deleteCatElement(e)\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nconsole.log(taskList);\r\n\r\nfunction deleteCatElement(e) {\r\n    e.target.parentElement.remove();\r\n    taskList.deleteCategory(`${e.target.parentElement.firstChild.textContent}`);\r\n\r\n    saveTaskListToLocalStorage();\r\n}\r\n\r\n// refresh the task-container section when clicking on a category\r\nconst taskContainer = document.querySelector(\".task-container\");\r\nfunction showCorrespondingTasks(category) {\r\n    taskContainer.innerHTML = \"\";\r\n    createTasksHeading(category);\r\n    createAddTaskElement();\r\n    createTaskCardsContainers();\r\n    createTaskCards(category);\r\n    taskEventListeners();\r\n\r\n}\r\n\r\nfunction createTasksHeading(category) {\r\n    const catHeadingTitle = document.createElement(\"h2\");\r\n    catHeadingTitle.classList.add(\"cat-heading\");\r\n    catHeadingTitle.textContent = category.name;\r\n    taskContainer.appendChild(catHeadingTitle);\r\n}\r\n\r\nfunction createAddTaskElement() {\r\n    const addTaskBtn = document.createElement(\"button\");\r\n    addTaskBtn.classList.add(\"add-task-btn\");\r\n    addTaskBtn.textContent = \"Add New Task\";\r\n    taskContainer.appendChild(addTaskBtn);\r\n}\r\n\r\nfunction createTaskCardsContainers() {\r\n    const cardsContainer = document.createElement(\"div\");\r\n    cardsContainer.classList.add(\"task-card-container\");\r\n    taskContainer.appendChild(cardsContainer);\r\n}\r\n\r\nfunction createTaskCards(category) {\r\n    category.tasks.forEach((task) => {\r\n        addTaskCard(task);\r\n    });\r\n}\r\n\r\n// tasks events listeners\r\nfunction taskEventListeners() {\r\n    const addTaskDialog = document.querySelector(\".add-task-dialog\");\r\n    const addNewTaskBtn = document.querySelector(\".add-task-btn\");\r\n    const closeAddTaskDialog = document.getElementById(\"close-add-task-dialog\");\r\n    const addTaskBtnDialog = document.getElementById(\"add-task-btn-dialog\");\r\n    const taskTitle = document.getElementById(\"task-title\");\r\n    const taskDescription = document.getElementById(\"task-description\");\r\n    const taskDueDate = document.getElementById(\"task-due-date\");\r\n    const taskPriority = document.getElementById(\"task-priority\");\r\n\r\n    // add new task event listener\r\n    addNewTaskBtn.addEventListener(\"click\", () => {\r\n        addTaskDialog.showModal();\r\n        taskTitle.value = \"\";\r\n        taskDescription.value = \"\";\r\n        taskDueDate.value = \"\";\r\n    });\r\n\r\n    // close \"add new task\" dialog\r\n    closeAddTaskDialog.addEventListener(\"click\", () => {\r\n        addTaskDialog.close();\r\n    });\r\n\r\n    // add new task dialog\r\n    addTaskBtnDialog.addEventListener(\"click\", (e) => {\r\n        e.preventDefault();\r\n        if (taskTitle.value && taskDueDate.value) {\r\n            const task = new Task(`${taskTitle.value}`,`${taskDescription.value}`,`${taskDueDate.value}`,`${taskPriority.value}`);\r\n            const title = document.querySelector(\".cat-heading\");\r\n            console.log(title);\r\n            console.log(title.textContent);        \r\n            const index = taskList.categories.findIndex((category) => category.name === title.textContent);\r\n            console.log(index);\r\n            const cat = taskList.categories[index];\r\n            cat.addTask(task);\r\n            console.log(cat);\r\n            addTaskCard(task);\r\n            addTaskDialog.close();\r\n\r\n            saveTaskListToLocalStorage()\r\n        }\r\n    });\r\n}\r\n\r\nfunction addTaskCard(task) {\r\n    const container = document.querySelector(\".task-card-container\");\r\n    const existingTasks = document.querySelectorAll(\".card\");\r\n\r\n    //check if the task already exists\r\n    const taskExists = Array.from(existingTasks).some((existingTask) => {\r\n        return task.title === existingTask.querySelector(\".task-title\").textContent;\r\n    });\r\n\r\n    // add the card if the taks doesn't exist yet\r\n    if (!taskExists) {\r\n        const card = document.createElement(\"div\");\r\n        card.classList.add(\"card\");\r\n        \r\n        const taskTitle = document.createElement(\"h3\");\r\n        taskTitle.classList.add(\"task-title\");\r\n        taskTitle.textContent = task.title;\r\n        \r\n        const taskDescription = document.createElement(\"p\");\r\n        taskDescription.classList.add(\"task-description\");\r\n        taskDescription.textContent = task.description;\r\n        \r\n        const taskDueDate = document.createElement(\"p\");\r\n        taskDueDate.classList.add(\"task-due-date\");\r\n        taskDueDate.textContent = `Due Date: ${task.dueDate}`;\r\n\r\n        const taskPriority = document.createElement(\"p\");\r\n        taskPriority.classList.add(\"task-priority\");\r\n        if (task.priority) {\r\n            taskPriority.textContent = `Priority: ${task.priority}`;\r\n        } else {\r\n            taskPriority.textContent = `Priority: unset`;            \r\n        }\r\n\r\n    \r\n        const editTaskBtn = document.createElement(\"button\");\r\n        editTaskBtn.classList.add(\"edit-task-btn\");\r\n        editTaskBtn.textContent = \"edit\";\r\n        editTaskBtn.addEventListener(\"click\",editTaskButtonClickHandler);\r\n\r\n        const deleteTaskBtn = document.createElement(\"button\");\r\n        deleteTaskBtn.classList.add(\"delete-task-btn\");\r\n        deleteTaskBtn.textContent = \"delete\";\r\n        deleteTaskBtn.addEventListener(\"click\",deleteTaskButtonClickHandler);\r\n\r\n        const taskDoneBtn = document.createElement(\"button\");\r\n        taskDoneBtn.classList.add(\"task-done-button\");\r\n        taskDoneBtn.textContent = \"done\";\r\n        taskDoneBtn.addEventListener(\"click\",taskDoneButtonClickHandler);\r\n    \r\n        card.appendChild(taskTitle);\r\n        card.appendChild(taskDescription);\r\n        card.appendChild(taskDueDate);\r\n        card.appendChild(taskPriority);\r\n        card.appendChild(editTaskBtn);\r\n        card.appendChild(deleteTaskBtn);\r\n        card.appendChild(taskDoneBtn);\r\n        container.appendChild(card);\r\n    }\r\n\r\n}\r\n\r\n    // delete task button listener\r\nfunction deleteTaskButtonClickHandler(e) {\r\n    const catName = e.target.parentElement.parentElement.parentElement.firstChild.textContent.trim();\r\n    const taskName = e.target.parentElement.firstChild.textContent.trim()\r\n    const catIndex = taskList.categories.findIndex((cat) => {\r\n        return cat.name.trim() === catName;\r\n    });\r\n\r\n    console.log(taskName);\r\n    taskList.categories[catIndex].deleteTask(taskName);\r\n    e.target.parentElement.remove();\r\n    console.log(taskList);\r\n\r\n    saveTaskListToLocalStorage()\r\n}\r\n\r\n    // edit button listener\r\nfunction editTaskButtonClickHandler(e) {\r\n    // retrieve edit dialog elements\r\n    const addTaskDialog = document.querySelector(\".e-task-dialog\");\r\n    const closeAddTaskDialog = document.getElementById(\"e-close-add-task-dialog\");\r\n    const addTaskBtnDialog = document.getElementById(\"e-add-task-btn-dialog\");\r\n    const taskTitle = document.getElementById(\"e-task-title\");\r\n    const taskDescription = document.getElementById(\"e-task-description\");\r\n    const taskDueDate = document.getElementById(\"e-task-due-date\");\r\n    const taskPriority = document.getElementById(\"e-task-priority\");\r\n\r\n    // retrieve current values of card\r\n    const renderedTaskTitle = e.target.parentElement.firstChild.textContent.trim();\r\n    const renderedTaskDescription = e.target.previousElementSibling.previousElementSibling.previousElementSibling.textContent.trim();\r\n    const renderedDueDate = e.target.previousElementSibling.previousElementSibling.textContent.trim().replace(\"Due Date: \", \"\");\r\n    renderedDueDate.replaceAll(\"-\", \" \");\r\n    const renderedPriority = e.target.previousElementSibling.textContent.trim().replace(\"Priority: \", \"\");\r\n    console.log(renderedPriority);\r\n\r\n    // show edit task modal onclick\r\n    addTaskDialog.showModal();\r\n    taskTitle.value = renderedTaskTitle;\r\n    taskDescription.value = renderedTaskDescription;\r\n    taskDueDate.value = renderedDueDate;\r\n    if (renderedPriority !== \"unset\") {\r\n        taskPriority.value = renderedPriority;\r\n    } else {\r\n        taskPriority.value = \"low\";\r\n    }\r\n\r\n    // close \"edit task\" dialog\r\n    closeAddTaskDialog.addEventListener(\"click\", () => {\r\n        addTaskDialog.close();\r\n    });\r\n\r\n    // edit task button dialog\r\n    addTaskBtnDialog.addEventListener(\"click\", (e) => {\r\n        e.preventDefault();\r\n        if (taskTitle.value && taskDueDate.value) {\r\n            // find the current category\r\n            const title = document.querySelector(\".cat-heading\");     \r\n            const index = taskList.categories.findIndex((category) => category.name === title.textContent);\r\n            console.log(index);\r\n            const cat = taskList.categories[index];\r\n            console.log(cat);\r\n            // find the current task\r\n            const taskIndex = cat.tasks.findIndex((task) => task.title === renderedTaskTitle);\r\n            const task = cat.tasks[taskIndex];\r\n            // set new values\r\n            task.title = taskTitle.value;\r\n            task.description = taskDescription.value;\r\n            task.dueDate = taskDueDate.value;\r\n            task.priority = taskPriority.value;           \r\n            console.log(taskList);\r\n            updateCard(task,renderedTaskTitle);\r\n            \r\n            addTaskDialog.close();\r\n\r\n            saveTaskListToLocalStorage()\r\n        }\r\n    });\r\n}\r\n\r\nfunction updateCard(task,oldTitle) {\r\n\r\n// find the card with the old title\r\nconst allCards = document.querySelectorAll(\".card\");\r\nconst cardArr= Array.from(allCards);\r\nconst index = cardArr.findIndex((card) => card.firstChild.textContent.trim() === oldTitle);\r\nconsole.log(allCards[index]);\r\nconst currentCardContainer = allCards[index];\r\n\r\n// update the title, the description, the duedate and the priority;\r\nconst title = currentCardContainer.querySelector(\".task-title\");\r\nconst description = currentCardContainer.querySelector(\".task-description\");\r\nconst dueDate = currentCardContainer.querySelector(\".task-due-date\");\r\nconst priority = currentCardContainer.querySelector(\".task-priority\");\r\n\r\ntitle.textContent = task.title;\r\ndescription.textContent = task.description;\r\ndueDate.textContent = `Due Date: ${task.dueDate}`;\r\npriority.textContent = `Priority: ${task.priority}`\r\n}\r\n\r\nfunction taskDoneButtonClickHandler(e) {\r\n    // select current card\r\nconst currentCard = e.target.parentElement;\r\n    // toggle class \".done\" to the card (visual)\r\ncurrentCard.classList.toggle(\"done\");\r\n    // select the corresponding task\r\n        // finding the category\r\n    const title = document.querySelector(\".cat-heading\");     \r\n    const index = taskList.categories.findIndex((category) => category.name === title.textContent);\r\n    console.log(index);\r\n    const cat = taskList.categories[index];\r\n        // finding the task\r\n    const taskIndex = cat.tasks.findIndex((task) => task.title === e.target.parentElement.firstChild.textContent.trim());\r\n    const task = cat.tasks[taskIndex];\r\n    // toggle task status\r\n    task.toggleTaskStatus();\r\n\r\n    saveTaskListToLocalStorage()\r\n}\r\n\r\n"],"names":["TaskList","constructor","this","categories","addCategory","category","push","deleteCategory","name","filter","Category","tasks","addTask","task","some","t","title","deleteTask","Task","description","dueDate","priority","completed","toggleTaskStatus","taskList","saveTaskListToLocalStorage","taskListString","JSON","stringify","localStorage","setItem","getItem","console","log","parse","Object","assign","map","cat","workCategory","studyCategory","personalCategory","task1","task2","task3","initializeApp","contentElement","document","querySelector","addCategoryToCategoryList","list","listItem","createElement","catLink","setAttribute","classList","add","textContent","addEventListener","e","stopPropagation","index","findIndex","target","el","showCorrespondingTasks","querySelectorAll","forEach","sibling","remove","catEditBtn","editCategoryEventHandler","catDeletebtn","deleteCatBtn","Array","from","indexOf","parentElement","firstChild","contains","deleteCatElement","taskContainer","innerHTML","initializeTaskContainer","appendChild","editModal","editCatTitle","getElementById","closeEditCatBtn","saveChangesBtn","linkElement","currentTitleValue","trim","value","showModal","close","saveChangesHandler","event","preventDefault","newTitle","links","link","ctgrName","removeEventListener","taskContainerElement","text","headerElement","headerTitle","createHeader","mainElement","categoryContainer","categoryPara","categoryList","createCategoryContainer","createTaskContainer","createMain","addCatBtn","addCategoryButton","footerElement","footerPara","currentYear","Date","getFullYear","createFooter","addCatDialog","catTitle","closeCatBtn","addCatToListBtn","catHeadingTitle","createTasksHeading","addTaskBtn","createAddTaskElement","cardsContainer","createTaskCardsContainers","addTaskCard","createTaskCards","addTaskDialog","addNewTaskBtn","closeAddTaskDialog","addTaskBtnDialog","taskTitle","taskDescription","taskDueDate","taskPriority","taskEventListeners","container","existingTasks","existingTask","card","editTaskBtn","editTaskButtonClickHandler","deleteTaskBtn","deleteTaskButtonClickHandler","taskDoneBtn","taskDoneButtonClickHandler","catName","taskName","catIndex","renderedTaskTitle","renderedTaskDescription","previousElementSibling","renderedDueDate","replace","replaceAll","renderedPriority","taskIndex","oldTitle","allCards","currentCardContainer","updateCard","toggle"],"sourceRoot":""}